

name: 'Terraform'

on:
  push:
    branches: [ "infra" ]
  pull_request:

permissions:
  id-token: write
  contents: read
jobs:


  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    



    defaults:
      run:
        shell: bash

    steps:
    # Checkout del repositorio
    - name: Checkout
      uses: actions/checkout@v4
    - name: Ultimo commit
      id: get_commit_message
      run: |
        commit_message=$(git log -1 --pretty=%B)
        echo "commit_message=$commit_message" >> $GITHUB_ENV      

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.5.0 
        TF_TOKEN_app_terraform_io: ${{ secrets.TERRAFORM_TOKEN }}


    - name: Ejecuta si el commit es Deploy
      if: contains(env.commit_message, 'deploy')
      run: ./script.sh
      env:
        TF_TOKEN_app_terraform_io: ${{ secrets.TERRAFORM_TOKEN }}
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}      

    - name: Ejecuta si el commit es Destroy
      if: contains(env.commit_message, 'destroy')
      run: |
          terraform init
          terraform apply -auto-approve -input=false -var-file="./vars.tfvars" -destroy -lock=false
      env:
        TF_TOKEN_app_terraform_io: ${{ secrets.TERRAFORM_TOKEN }}
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}   

  