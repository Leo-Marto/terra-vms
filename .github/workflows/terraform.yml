

name: 'Terraform'

on:
  push:
    branches: [ "infra" ]
  pull_request:

permissions:
  contents: read

jobs:


  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.5.0  # Cambia a la versi√≥n que necesitas
      env:
        TF_TOKEN_app_terraform_io: ${{ secrets.TERRAFORM_TOKEN }}


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      env:
        TF_TOKEN_app_terraform_io: ${{ secrets.TERRAFORM_TOKEN }}


    # Generates an execution plan for Terraform
    - name: Terraform install
      run: ./script.sh
      env:
        TF_TOKEN_app_terraform_io: ${{ secrets.TERRAFORM_TOKEN }}
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}      

